import SwiftUI

/// A settings configuration to retrieve trivia questions from the *Open Trivia
/// Database*.
///
/// A URL to retrieve trivia questions is generated by selecting the category,
/// difficulty level, question type, and number of questions.
struct TriviaQuizConfig: Codable {
    
    // -------------------------------------------------------------------------
    // MARK:- Stored properties
    // -------------------------------------------------------------------------
    
    /// The index of the currently selected category.
    var categoryIndex = 0
    
    /// The index of the currently selected difficulty level.
    var difficultyIndex = 0
    
    /// The index of the currently selected question type.
    var questionTypeIndex = 0
    
    /// The index of the currently selected number of questions.
    var questionCountIndex = 0
    
    // -------------------------------------------------------------------------
    // MARK:- Computed properties
    // -------------------------------------------------------------------------
    
    /// The URL to retrieve trivia questions from the *Open Trivia Database*.
    var apiURL: URL? {
        
        var components = URLComponents()
        components.scheme = "https"
        components.host = "opentdb.com"
        components.path = "/api.php"
        
        let questionCount = TriviaQuizConfig
            .allQuestionCounts[questionCountIndex]
        var queryItems = [
            URLQueryItem(name: "amount", value: String(questionCount))
        ]
        if categoryIndex > 0 {
            queryItems.append(
                URLQueryItem(name: "category", value: String(categoryIndex + 8))
            )
        }
        if difficultyIndex > 0 {
            let value = TriviaQuizConfig.allDifficulties[difficultyIndex]
                .lowercased()
            queryItems.append(URLQueryItem(name: "difficulty", value: value))
        }
        if questionTypeIndex > 0 {
            let value = (questionTypeIndex == 1) ? "multiple" : "boolean"
            queryItems.append(URLQueryItem(name: "type", value: value))
        }
        components.queryItems = queryItems
        
        return components.url
    }
    
    /// The “property list” representation of this trivia quiz configuration.
    var propertyList: Data? {
        try? JSONEncoder().encode(self)
    }
    
    // -------------------------------------------------------------------------
    // MARK:- Initializers
    // -------------------------------------------------------------------------
    
    /// Creates a default trivia quiz configuration.
    init() {}
    
    /// Creates a trivia quiz configuration with the specified “property list.”
    ///
    /// If the “property list” is `nil` or it cannot be decoded, then this
    /// initializer will return `nil`.
    ///
    /// - Parameter propertyList: The “property list” to decode.
    init?(propertyList: Data?) {
        
        guard let plist = propertyList else {
            return nil
        }
        
        guard let newConfig = try? JSONDecoder().decode(
            TriviaQuizConfig.self,
            from: plist
        ) else {
            return nil
        }
        
        self = newConfig
    }
    
    // -------------------------------------------------------------------------
    // MARK:- Static properties
    // -------------------------------------------------------------------------
    
    /// The list of all possible categories.
    static let allCategories = [
        "Any Category",
        "General Knowledge",
        "Books",
        "Film",
        "Music",
        "Musicals & Theater",
        "Television",
        "Video Games",
        "Board Games",
        "Science & Nature",
        "Computers",
        "Mathematics",
        "Mythology",
        "Sports",
        "Geography",
        "History",
        "Politics",
        "Art",
        "Celebrities",
        "Animals",
        "Vehicles",
        "Comics",
        "Gadgets",
        "Anime & Manga",
        "Cartoons"
    ]
    
    /// The list of all possible difficulty levels.
    static let allDifficulties = [
        "Any Difficulty",
        "Easy",
        "Medium",
        "Hard"
    ]
    
    /// The list of all possible question types.
    static let allQuestionTypes = [
        "Any Type",
        "Multiple-Choice",
        "True/False"
    ]
    
    /// The list of all possible numbers of questions.
    static let allQuestionCounts = (2 ... 10).map { $0 * 5 }
}
